{
  "version": 3,
  "sources": ["../../performance-now/lib/src/performance-now.coffee", "../../raf/index.js", "../../gl-react-dom/src/getContext.js", "../../gl-react-dom/src/loseGL.js", "../../gl-react-dom/src/GLViewDOM.js", "../../webgltexture-loader-dom-canvas/src/CanvasTextureLoader.js", "../../webgltexture-loader-dom-video/src/VideoTextureLoader.js", "../../webgltexture-loader-dom-image-url/src/ImageURLTextureLoader.js", "../../webgltexture-loader-dom/src/index.js", "../../gl-react-dom/src/index.js"],
  "sourcesContent": [null, "var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n", "const getContext = (\n  canvas: HTMLCanvasElement,\n  opts: any,\n  version: \"webgl\" | \"webgl2\" | \"auto\"\n) => {\n  let gl;\n  if (version === \"webgl2\" || version === \"auto\") {\n    gl = canvas.getContext(\"webgl2\", opts);\n  }\n  if (!gl && (version === \"webgl\" || version === \"auto\")) {\n    gl =\n      canvas.getContext(\"webgl\", opts) ||\n      canvas.getContext(\"webgl-experimental\", opts) ||\n      canvas.getContext(\"experimental-webgl\", opts);\n  }\n  return gl;\n};\n\nexport default getContext;\n", "export default (gl) => {\n  // WEBGL_lose_context helps browser to GC the context. see https://jsfiddle.net/greweb/j9709k67/\n  const loseContextExt = gl.getExtension(\"WEBGL_lose_context\");\n  if (loseContextExt) loseContextExt.loseContext();\n};\n", "//@flow\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport getContext from \"./getContext\";\nimport loseGL from \"./loseGL\";\n\nconst __DEV__ = process.env.NODE_ENV === \"development\";\n\n/**\n * WebGL context initial options.\n */\ntype WebGLContextAttributes = {\n  alpha?: boolean,\n  depth?: boolean,\n  stencil?: boolean,\n  antialias?: boolean,\n  premultipliedAlpha?: boolean,\n  preserveDrawingBuffer?: boolean,\n  preferLowPowerToHighPerformance?: boolean,\n  failIfMajorPerformanceCaveat?: boolean,\n};\n\nconst propTypes = {\n  onContextCreate: PropTypes.func.isRequired,\n  onContextFailure: PropTypes.func.isRequired,\n  onContextLost: PropTypes.func.isRequired,\n  onContextRestored: PropTypes.func.isRequired,\n  webglContextAttributes: PropTypes.object,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  style: PropTypes.object,\n  pixelRatio: PropTypes.number,\n  version: PropTypes.string,\n};\n\nclass ErrorDebug extends Component {\n  render() {\n    const { error } = this.props;\n    let title = String(error.rawError || error.message || error);\n    let detail = String(error.longMessage || error.rawError || \"\");\n    const style = {\n      width: \"100%\",\n      height: \"100%\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      padding: \"1em\",\n      background: \"#a00\",\n      color: \"#fff\",\n      fontSize: \"12px\",\n      lineHeight: \"1.2em\",\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontFamily: \"monospace\",\n      overflow: \"auto\",\n    };\n    const titleStyle = {\n      fontWeight: \"bold\",\n      marginBottom: \"1em\",\n    };\n    const detailStyle = {\n      whiteSpace: \"pre\",\n    };\n    return (\n      <div style={style}>\n        <div style={titleStyle}>{title}</div>\n        <div style={detailStyle}>{detail}</div>\n      </div>\n    );\n  }\n}\n\nexport default class GLViewDOM extends Component<\n  {\n    onContextCreate: (gl: WebGLRenderingContext) => void,\n    onContextFailure: (e: Error) => void,\n    onContextLost: () => void,\n    onContextRestored: (gl: ?WebGLRenderingContext) => void,\n    webglContextAttributes?: WebGLContextAttributes,\n    pixelRatio?: number,\n    width: number,\n    height: number,\n    style?: any,\n    debug?: number,\n    version?: string,\n  },\n  {\n    error: ?Error,\n  }\n> {\n  state = {\n    error: null,\n  };\n  static propTypes = propTypes;\n  webglContextAttributes: WebGLContextAttributes;\n  canvas: ?HTMLCanvasElement;\n  gl: ?WebGLRenderingContext;\n\n  componentDidMount() {\n    const { onContextCreate, onContextFailure } = this.props;\n    const gl: ?WebGLRenderingContext = this._createContext();\n    if (gl) {\n      this.gl = gl;\n      onContextCreate(gl);\n      const { canvas } = this;\n      invariant(canvas, \"canvas is not settled in GLViewDOM#componentDidMount\");\n      canvas.addEventListener(\"webglcontextlost\", this._onContextLost);\n      canvas.addEventListener(\"webglcontextrestored\", this._onContextRestored);\n    } else {\n      onContextFailure(new Error(\"no-webgl-context\"));\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.gl) {\n      loseGL(this.gl);\n      this.gl = null;\n    }\n    const { canvas } = this;\n    if (canvas) {\n      canvas.removeEventListener(\"webglcontextlost\", this._onContextLost);\n      canvas.removeEventListener(\n        \"webglcontextrestored\",\n        this._onContextRestored\n      );\n    }\n  }\n\n  render() {\n    const { error } = this.state;\n    let {\n      width,\n      height,\n      pixelRatio,\n      style,\n      debug,\n      version,\n      ...rest\n    } = this.props;\n    if (!pixelRatio)\n      pixelRatio = Number(\n        (typeof window === \"object\" && window.devicePixelRatio) || 1\n      );\n    for (let k in propTypes) {\n      if (rest.hasOwnProperty(k)) {\n        delete rest[k];\n      }\n    }\n    return (\n      <span\n        style={{\n          position: \"relative\",\n          ...style,\n          display: \"inline-block\",\n          width,\n          height,\n        }}\n      >\n        <canvas\n          ref={this.onRef}\n          style={{ width, height }}\n          width={width * pixelRatio}\n          height={height * pixelRatio}\n          {...rest}\n        />\n        {error ? <ErrorDebug error={error} /> : null}\n      </span>\n    );\n  }\n\n  _createContext() {\n    const { webglContextAttributes, debug, version } = this.props;\n    const gl: ?WebGLRenderingContext = getContext(\n      this.canvas,\n      debug\n        ? { ...webglContextAttributes, preserveDrawingBuffer: true }\n        : webglContextAttributes,\n      version || \"auto\"\n    );\n    this.webglContextAttributes = webglContextAttributes || {};\n    return gl;\n  }\n\n  _onContextLost = (e: Event) => {\n    e.preventDefault();\n    this.gl = null;\n    this.props.onContextLost();\n  };\n\n  _onContextRestored = () => {\n    this.gl = this._createContext();\n    this.props.onContextRestored(this.gl);\n  };\n\n  onRef = (ref: HTMLCanvasElement) => {\n    this.canvas = ref;\n  };\n\n  debugError = !__DEV__\n    ? null\n    : (error: Error) => {\n        this.setState({ error });\n      };\n\n  afterDraw = !__DEV__\n    ? null\n    : () => {\n        if (this.state.error) {\n          this.setState({ error: null });\n        }\n      };\n\n  captureAsDataURL(...args: any): string {\n    if (!this.webglContextAttributes.preserveDrawingBuffer) {\n      console.warn(\n        \"Surface#captureAsDataURL is likely to not work if you don't define webglContextAttributes={{ preserveDrawingBuffer: true }}\"\n      );\n    }\n    invariant(this.canvas, \"canvas is no longer available\");\n    return this.canvas.toDataURL(...args);\n  }\n\n  captureAsBlob(...args: any): Promise<Blob> {\n    if (!this.webglContextAttributes.preserveDrawingBuffer) {\n      console.warn(\n        \"Surface#captureAsBlob is likely to not work if you don't define webglContextAttributes={{ preserveDrawingBuffer: true }}\"\n      );\n    }\n    return Promise.resolve().then(\n      () =>\n        new Promise((resolve, reject) =>\n          this.canvas\n            ? this.canvas.toBlob(resolve, ...args)\n            : reject(new Error(\"canvas is no longer available\"))\n        )\n    );\n  }\n}\n", "//@flow\nimport {\n  WebGLTextureLoaderSyncHashCache,\n  globalRegistry\n} from \"webgltexture-loader\";\n\nclass CanvasTextureLoader extends WebGLTextureLoaderSyncHashCache<\n  HTMLCanvasElement\n> {\n  disposes = {};\n\n  canLoad(input: any) {\n    return input instanceof HTMLCanvasElement;\n  }\n\n  inputHash(input: HTMLCanvasElement) {\n    return input;\n  }\n\n  getNoCache(input: HTMLCanvasElement) {\n    const { gl } = this;\n    const { width, height } = input;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);\n    return { texture, width, height };\n  }\n\n  update(input: HTMLCanvasElement) {\n    const { gl } = this;\n    const { texture } = this.get(input);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);\n  }\n}\n\nglobalRegistry.add(CanvasTextureLoader);\n\nexport default CanvasTextureLoader;\n", "//@flow\nimport {\n  WebGLTextureLoaderAsyncHashCache,\n  globalRegistry\n} from \"webgltexture-loader\";\n\nclass VideoTextureLoader extends WebGLTextureLoaderAsyncHashCache<\n  HTMLVideoElement\n> {\n  canLoad(input: any) {\n    return input instanceof HTMLVideoElement;\n  }\n\n  inputHash(input: HTMLVideoElement) {\n    return input;\n  }\n\n  loadNoCache(input: HTMLVideoElement) {\n    const { gl } = this;\n    const { width, height } = input;\n\n    let timeout;\n    const dispose = () => {\n      clearTimeout(timeout);\n    };\n\n    const promise = new Promise((resolve, reject) => {\n      const checkVideoReady = () => {\n        if (input.videoWidth > 0) {\n          const texture = gl.createTexture();\n          const { videoWidth: width, videoHeight: height } = input;\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            input\n          );\n          resolve({\n            texture,\n            width,\n            height\n          });\n        } else {\n          timeout = setTimeout(checkVideoReady, 100);\n        }\n      };\n      checkVideoReady();\n    });\n\n    return { dispose, promise };\n  }\n\n  update(input: HTMLVideoElement) {\n    const { gl } = this;\n    const res = this.get(input);\n    if (!res) return;\n    gl.bindTexture(gl.TEXTURE_2D, res.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);\n  }\n}\n\nglobalRegistry.add(VideoTextureLoader);\n\nexport default VideoTextureLoader;\n", "//@flow\nimport {\n  globalRegistry,\n  WebGLTextureLoaderAsyncHashCache\n} from \"webgltexture-loader\";\n\nfunction loadImage(\n  src: string,\n  success: (img: Image) => void,\n  failure: (e: Error) => void\n) {\n  let img = new window.Image();\n  if (src.slice(0, 5) !== \"data:\") {\n    img.crossOrigin = true;\n  }\n  img.onload = function() {\n    if (img) {\n      success(img);\n    }\n    img = null;\n  };\n  img.onabort = img.onerror = failure;\n  img.src = src;\n  return function() {\n    if (img) {\n      img.onload = null;\n      img.onerror = null;\n      img.onabort = null;\n      img.src = \"\";\n      img = null;\n    }\n  };\n}\nclass ImageURLTextureLoader extends WebGLTextureLoaderAsyncHashCache<string> {\n  canLoad(input: any) {\n    return typeof input === \"string\";\n  }\n\n  inputHash(input: string) {\n    return input;\n  }\n\n  loadNoCache(src: string) {\n    const { gl } = this;\n    let dispose;\n    const promise = new Promise(\n      (success, failure) => (dispose = loadImage(src, success, failure))\n    ).then(img => {\n      const { width, height } = img;\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\n      return { texture, width, height };\n    });\n    return { promise, dispose: () => dispose() };\n  }\n}\n\nglobalRegistry.add(ImageURLTextureLoader);\n\nexport default ImageURLTextureLoader;\n", "//@flow\nimport CanvasTextureLoader from \"webgltexture-loader-dom-canvas\";\nimport VideoTextureLoader from \"webgltexture-loader-dom-video\";\nimport ImageURLTextureLoader from \"webgltexture-loader-dom-image-url\";\n\nexport { CanvasTextureLoader, VideoTextureLoader, ImageURLTextureLoader };\n", "//@flow\nimport { createSurface } from \"gl-react\";\nimport raf from \"raf\";\nimport GLView from \"./GLViewDOM\";\nimport \"webgltexture-loader-dom\";\n\nconst RenderLessElement = \"span\";\n\nconst mapRenderableContent = (el: mixed) =>\n  el instanceof Element ? el.firstElementChild : null;\n\nexport const Surface = createSurface({\n  GLView,\n  RenderLessElement,\n  mapRenderableContent,\n  requestFrame: raf,\n  cancelFrame: raf.cancel,\n});\n"],
  "mappings": "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",
  "names": ["i", "getContext", "canvas", "opts", "version", "gl", "gl", "loseContextExt", "getExtension", "loseContext", "__DEV__", "process", "propTypes", "onContextCreate", "PropTypes", "func", "isRequired", "onContextFailure", "onContextLost", "onContextRestored", "webglContextAttributes", "object", "width", "number", "height", "style", "pixelRatio", "version", "string", "ErrorDebug", "Component", "render", "error", "props", "title", "String", "rawError", "message", "detail", "longMessage", "position", "top", "left", "padding", "background", "color", "fontSize", "lineHeight", "fontStyle", "fontWeight", "fontFamily", "overflow", "titleStyle", "marginBottom", "detailStyle", "whiteSpace", "GLViewDOM", "e", "preventDefault", "gl", "_createContext", "ref", "canvas", "setState", "state", "componentDidMount", "invariant", "addEventListener", "_onContextLost", "_onContextRestored", "Error", "componentWillUnmount", "loseGL", "removeEventListener", "debug", "rest", "Number", "window", "devicePixelRatio", "k", "hasOwnProperty", "display", "onRef", "getContext", "preserveDrawingBuffer", "captureAsDataURL", "args", "console", "warn", "toDataURL", "captureAsBlob", "Promise", "resolve", "then", "reject", "toBlob", "CanvasTextureLoader", "WebGLTextureLoaderSyncHashCache", "canLoad", "input", "HTMLCanvasElement", "inputHash", "getNoCache", "gl", "width", "height", "texture", "createTexture", "bindTexture", "TEXTURE_2D", "texImage2D", "RGBA", "UNSIGNED_BYTE", "update", "get", "globalRegistry", "add", "VideoTextureLoader", "WebGLTextureLoaderAsyncHashCache", "canLoad", "input", "HTMLVideoElement", "inputHash", "loadNoCache", "gl", "width", "height", "timeout", "dispose", "clearTimeout", "promise", "Promise", "resolve", "reject", "checkVideoReady", "videoWidth", "texture", "createTexture", "videoHeight", "bindTexture", "TEXTURE_2D", "texImage2D", "RGBA", "UNSIGNED_BYTE", "setTimeout", "update", "res", "get", "globalRegistry", "add", "loadImage", "src", "success", "failure", "img", "window", "Image", "slice", "crossOrigin", "onload", "onabort", "onerror", "ImageURLTextureLoader", "WebGLTextureLoaderAsyncHashCache", "canLoad", "input", "inputHash", "loadNoCache", "gl", "dispose", "promise", "Promise", "then", "width", "height", "texture", "createTexture", "bindTexture", "TEXTURE_2D", "texImage2D", "RGBA", "UNSIGNED_BYTE", "globalRegistry", "add", "RenderLessElement", "mapRenderableContent", "el", "Element", "firstElementChild", "Surface", "createSurface", "GLView", "requestFrame", "raf", "cancelFrame", "cancel"]
}
